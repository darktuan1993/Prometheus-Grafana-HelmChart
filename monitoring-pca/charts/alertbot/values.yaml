
replicaCount: 1
image:
  repository: bachdangtuan/prom-golang-bot
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

#This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/ 
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
service:
  type: ClusterIP
  port: 9087

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: 9087
readinessProbe:
  httpGet:
    path: /
    port: 9087

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.

nodeSelector: {}

tolerations: []

affinity: {}

volumes: []

volumeMounts: []

alertbot:
  configTemplate: |-
    telegram_token: "5765051913:AAEXYcQKE0h8FTiC8Ba0DgNutliSMBbXAjw"
    template_path: "/etc/telegrambot/template.tmpl"
    time_zone: "Asia/Ho_Chi_Minh"
    split_token: "|"
    time_outdata: "02/01/2006 15:04:05"
    split_msg_byte: 10000

  template: |-
    {{if eq .Status "resolved"}}
    ‚úÖüíôPH·ª§C H·ªíIüíô‚úÖ
    ------------------------------------------------------
    N·ªôi dung: {{.CommonAnnotations.summary}}
    Nh√≥m C·∫£nh b√°o: {{ .CommonLabels.alertname }}
    M√°y Ch·ªß: {{ .CommonLabels.instance }}
    Status:  {{ .Status  | str_UpperCase}}
    ------------------------------------------------------
    {{- range $val := .Alerts }}
    X·ª≠ l√Ω c·∫£nh b√°o l√∫c: <code>{{ $val.StartsAt | str_FormatDate }}</code>
    {{- end -}}
    {{end -}}

    {{if eq .Status "firing"}}
    üö®üÜòC·∫¢NH B√ÅOüÜòüö®
    ------------------------------------------------------
    N·ªôi dung: {{.CommonAnnotations.summary}}
    Nh√≥m C·∫£nh b√°o: {{ .CommonLabels.alertname }}

    H·ªá th·ªëng vi·ªán: <b> {{ .CommonLabels.app_type | str_UpperCase }} </b>

    M√°y Ch·ªß: {{ .CommonLabels.instance }}
    Th√¥ng tin: {{.CommonAnnotations.description}}
    M·ª©c ƒê·ªô:  <code> üî• {{ .CommonLabels.severity | str_UpperCase }} üî• </code>

    ------------------------------------------------------
    {{- range $val := .Alerts }}
    TH·ªúI GIAN: <code>{{ $val.StartsAt | str_FormatDate }}</code>
    {{- end -}}
    {{end }}



